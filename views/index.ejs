<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no">
    <title>going TODAY</title>
    <link rel="stylesheet" href="/stylesheets/style.css" />
    <script type="text/javascript" src="https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=e6h3qbzmz4"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
    <!-- RESt API 키일 때 검색 안되서 JavaScript 키로 변경 -->
    <script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=30fe85ed28570a02950c7b4060789af6&libraries=services"></script>
  </head>
  <body>
    <div id="navbar">going TODAY</div>
    <div id="infoBox">
      <div id="infoTitle">오늘은</div>
      <div id="infoContent"></div>
    </div>
    <div id="search">
      <input id="search_input" placeholder="목적지를 입력해주세요" />
      <button id="search_button">검색</button>
    </div>
    <div id="current">현재 위치</div>
    <div id="map" style="width:100%; height:100vh;"></div>
    <!-- 외부에 있는 데이터(data.js)를 index.ejs 안에서 활용하겠다고 명시 -->
    <script type="text/javascript" src="/data/data.js"></script>
    <script>
    let mapOptions = {
        center: new naver.maps.LatLng(37.564214, 127.001699),
        zoom: 12
    };

    let map = new naver.maps.Map('map', mapOptions);

    let today = new Date();
    let currentDate = today.getFullYear() + "." + (today.getMonth() + 1) + "." + today.getDate() + ".";
    let result = document.getElementById("infoContent"); 
    result.innerHTML = currentDate;

    let markerList = [];
    let infowindowList = [];

    for(let i in data) {
      let target = data[i];
      let latlng = new naver.maps.LatLng(target.lat, target.lng);
      marker = new naver.maps.Marker({
        map: map,
        position: latlng, // target했던 데이터들이 위치 형태로 담김
        icon : {
          content : "<div class='marker'></div>",
          anchor: new naver.maps.Point(12, 12)
        },
      });

      let content = `<div class='infowindow_wrap'>
        <div class='infowindow_title'>${target.title}</div>
        <div class='infowindow_content'>${target.content}</div>
        <div class='infowindow_time'>${target.time}</div>
      </div>`

      let infowindow = new naver.maps.InfoWindow({
        content: content,
        backgroundColor: "#00ff0000",
        borderColor: "#00ff0000",
        anchorSize: new naver.maps.Size(0, 0)
      })

      markerList.push(marker);
      infowindowList.push(infowindow);
    }

    for(let i = 0, ii = markerList.length; i < ii; i++) {
      naver.maps.Event.addListener(map, "click", ClickMap(i)); // marker가 아닌 지도를 클릭해도 infowindow 사라지도록
      naver.maps.Event.addListener(markerList[i], "click", getClickHandler(i));
    }

    function ClickMap(i) {
      return function() {
        let infowindow = infowindowList[i];
        infowindow.close();
      }
    }

    function getClickHandler(i) {
      return function() {
        let marker = markerList[i];
        let infowindow = infowindowList[i];
        if(infowindow.getMap()) { // infowindow가 지도에 표시되어 있으면 닫고(true, false로 반환)
          infowindow.close();
        } else { // 표시되어 있지 않으면 infowindow를 띄움
          infowindow.open(map, marker);
        }
      }
    }

    let currentUse = true;

    $("#current").click(() => {
      if('geolocation' in navigator) {
        navigator.geolocation.getCurrentPosition(function(position){
          const lat = position.coords.latitude;
          const lng = position.coords.longitude;
          const latlng = new naver.maps.LatLng(lat, lng);
          if(currentUse) {
            marker = new naver.maps.Marker({
              map: map,
              position: latlng,
              icon: {
                content: '<img class="pulse" draggable="false" unselectable="on" src="https://myfirstmap.s3.ap-northeast-2.amazonaws.com/circle.png">',
                anchor: new naver.maps.Point(11, 11),
              },
            });
            currentUse = false;
          }
          map.setZoom(14, false);
          map.panTo(latlng);
        });
      } else {
        alert('위치 정보가 없습니다.');
      }
    });

    let ps = new kakao.maps.services.Places();
    let search_arr = [];

    $("#search_input").on("keydown", function(e) { // keydown: 엔터키 누를 때의 키보드 이벤트
      if(e.keyCode === 13) { // 13은 엔터키
        let content = $(this).val();
        ps.keywordSearch(content, placeSearchCB);
      }
    })

    $("#search_button").on("click", function(e) {
      let content = $("#search_input").val();
      ps.keywordSearch(content, placeSearchCB);
    })

    function placeSearchCB(data, status, pagination) {
      // data: 목적지를 바탕으로 검색한 결과
      // status: 서버에 대한 상태를 status를 통해 받아옴
      // pagination : 검색 결과가 얼마나 있는지 번호를 통해 확인(사용 X)
      if(status === kakao.maps.services.Status.OK) {
        let target = data[0];
        // console.log(target);
        const lat = target.y;
        const lng = target.x;
        const latlng = new naver.maps.LatLng(lat, lng);
        marker = new naver.maps.Marker({
          position: latlng,
          map: map
        })
        if(search_arr.length == 0) { // 검색 시 과거 검색 marker는 사라지고 새로운 marker로 변경
          search_arr.push(marker);
        } else {
          search_arr.push(marker);
          let pre_marker = search_arr.splice(0, 1);
          pre_marker[0].setMap(null);
        }
        map.setZoom(14, false);
        map.panTo(latlng);
      } else {
        alert("검색 결과가 없습니다.");
      }
    }
    </script>
  </body>
</html>